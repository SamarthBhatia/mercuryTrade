name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Log System Information
      run: |
        uname -a
        clang++ --version || echo "clang++ not installed"
        cmake --version

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-12 lld-12 cmake build-essential libc++-12-dev libc++abi-12-dev libasan6 valgrind
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-12 100
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-12 100

    - name: Create Build Directory
      run: mkdir build

    - name: Configure CMake
      run: |
        cd build
        cmake -DCMAKE_CXX_FLAGS="-fsanitize=address -fno-omit-frame-pointer -stdlib=libc++ -g" -DCMAKE_BUILD_TYPE=Debug ..

    - name: Build
      run: |
        cd build
        cmake --build . --config Debug

    - name: Run Tests with ASan
      env:
        ASAN_OPTIONS: "detect_leaks=0 log_path=asan.log"
      run: |
        cd build
        ctest --output-on-failure || true
        cat asan.log || echo "No ASan logs generated."

    - name: Run Valgrind Tests
      run: |
        cd build
        valgrind --leak-check=full ctest --output-on-failure || true

    - name: Upload Logs and Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: logs-and-results
        path: |
          build
          build/asan.log

  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Log System Information
      run: |
        uname -a
        g++ --version
        cmake --version

    - name: Install dependencies
      run: |
        brew install cmake

    - name: Create Build Directory
      run: mkdir build

    - name: Configure CMake
      run: |
        cd build
        cmake -DCMAKE_CXX_FLAGS="-fsanitize=address -fno-omit-frame-pointer -g" -DCMAKE_BUILD_TYPE=Debug ..

    - name: Build
      run: |
        cd build
        cmake --build . --config Debug

    - name: Run Tests with ASan
      env:
        ASAN_OPTIONS: "detect_leaks=0 log_path=asan.log"
      run: |
        cd build
        ctest --output-on-failure || true
        cat asan.log || echo "No ASan logs generated."

    - name: Upload Logs and Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: logs-and-results
        path: |
          build
          build/asan.log

